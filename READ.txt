Представь, что тебя как веб-разработчика попросили разработать веб-платформу, которая будет отслеживать прогресс студентов в обучении веб-разработке.

Для начала тебе необходимо создать объект student, в котором будут 3 свойства:

1)stack - массив из строк, где каждая строка - это технология. Изначально массив должен быть равен ['HTML'].
2)level - тип данных number. level отвечает за текущий уровень студента и изначально равен 1.
3)improveLevel() - функция, которая сначала увеличивает значение свойства level у студента на единицу. Если level равен 2-м, то тебе необходимо добавить в конец массива stack значение 'CSS', если 3-м - добавляем в конец stack значение 'JavaScript', 4-м - 'React', 5-ти - 'NodeJS'. Если значение level стало больше 5-ти, то тебе необходимо вывести в модальном окне через alert() сообщение: “Студент выучил все технологии!”. Также функция improveLevel() должна возвращать в самом конце обновленный объект student.
В итоге, значение свойства stack после выполнения кода ниже должно быть равно ["HTML", "CSS", "JavaScript", "React", "NodeJS"].
student
  .improveLevel()
  .improveLevel()
  .improveLevel()
  .improveLevel()
  .improveLevel();

Примечание: цепочка из подряд идущих функций impoveLevel() работает так, потому что improveLevel() возвращает объект student, а у объекта student есть метод impoveLevel().

Посмотри на пример:

const student = {
  improveLevel() {
    return this;
  }
};
student
  .improveLevel()
  .improveLevel()
  .improveLevel()
  .improveLevel()
  .improveLevel();
